// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.kubeprovision.v1;

import "google/protobuf/empty.proto";
import "teleport/kubeprovision/v1/kubeprovision.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/kubeprovision/v1;kubeprovisionv1";

// KubeProvisionService is a service that provides methods to manage KubeProvisions.
service KubeProvisionService {
  // CreateKubeProvision creates a new KubeProvision.
  rpc CreateKubeProvision(CreateKubeProvisionRequest) returns (KubeProvision);
  // GetKubeProvision gets a KubeProvision by name.
  rpc GetKubeProvision(GetKubeProvisionRequest) returns (KubeProvision);
  // ListKubeProvisions returns a list of KubeProvisions. It supports pagination.
  rpc ListKubeProvisions(ListKubeProvisionsRequest) returns (ListKubeProvisionsResponse);
  // UpdateKubeProvision updates an existing KubeProvision.
  rpc UpdateKubeProvision(UpdateKubeProvisionRequest) returns (KubeProvision);
  // UpsertKubeProvision upserts a KubeProvision.
  rpc UpsertKubeProvision(UpsertKubeProvisionRequest) returns (KubeProvision);
  // DeleteKubeProvision deletes a KubeProvision.
  rpc DeleteKubeProvision(DeleteKubeProvisionRequest) returns (google.protobuf.Empty);
  // DeleteAllKubeProvisions removes all KubeProvisions.
  rpc DeleteAllKubeProvisions(DeleteAllKubeProvisionsRequest) returns (google.protobuf.Empty);
}

// KubeProvisionRequest is a request to create a new KubeProvision.
message CreateKubeProvisionRequest {
  teleport.kubeprovision.v1.KubeProvision kube_provision = 1;
}

// GetKubeProvisionRequest is a request to get a KubeProvision by name.
message GetKubeProvisionRequest {
  // Name is the name of the KubeProvision to get.
  string name = 1;
}

// ListKubeProvisionsRequest is a request to get a list of KubeProvisions.
message ListKubeProvisionsRequest {
  // page_size is the maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;
  // page_token is the next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

// ListKubeProvisionsResponse is a response to GetKubeProvisionsRequest.
message ListKubeProvisionsResponse {
  repeated teleport.kubeprovision.v1.KubeProvision kube_provisions = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// UpdateKubeProvisionRequest is a request to update an existing KubeProvision.
message UpdateKubeProvisionRequest {
  teleport.kubeprovision.v1.KubeProvision kube_provision = 1;
}

// UpsertKubeProvisionRequest is a request to upsert a KubeProvision.
message UpsertKubeProvisionRequest {
  teleport.kubeprovision.v1.KubeProvision kube_provision = 1;
}

// DeleteKubeProvisionRequest is a request to delete a KubeProvision.
message DeleteKubeProvisionRequest {
  // Name is the name of the KubeProvision to delete.
  string name = 1;
}

// DeleteAllKubeProvisionsRequest is the request for deleting all KubeProvisions.
message DeleteAllKubeProvisionsRequest {}
